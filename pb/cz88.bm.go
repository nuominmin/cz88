// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: cz88.proto

package pb

import (
	"context"

	bm "github.com/go-kratos/kratos/pkg/net/http/blademaster"
	"github.com/go-kratos/kratos/pkg/net/http/blademaster/binding"

	google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathAppMyAddress = "v1/my_address"
var PathAppAddress = "v1/address"

// AppBMServer is the server API for App service.
type AppBMServer interface {
	MyAddress(ctx context.Context, req *google_protobuf1.Empty) (resp *AddressResp, err error)

	Address(ctx context.Context, req *AddressReq) (resp *AddressResp, err error)
}

var AppSvc AppBMServer

func appMyAddress(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AppSvc.MyAddress(c, p)
	c.JSON(resp, err)
}

func appAddress(c *bm.Context) {
	p := new(AddressReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AppSvc.Address(c, p)
	c.JSON(resp, err)
}

// RegisterAppBMServer Register the blademaster route
func RegisterAppBMServer(e *bm.Engine, server AppBMServer) {
	AppSvc = server
	e.GET("v1/my_address", appMyAddress)
	e.GET("v1/address", appAddress)
}
